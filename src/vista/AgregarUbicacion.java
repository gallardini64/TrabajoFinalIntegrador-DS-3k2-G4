/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import Dominio.Bandeja;
import Dominio.Freezer;
import Dominio.Pedido;
import controlador.ControladorCrearPedido;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author luciano
 */
public class AgregarUbicacion extends javax.swing.JFrame {
    private DefaultTableModel tabla;
    public static final String BOTON_AGREGAR_UBICACION = "boton agregar ubicacion";
    public static final String BOTON_UTULIZAR_HORNEADAS = "boton utilizar horneadas";
    public static final String BOTON_CONFIRMAR = "boton confirmar ubicacion";
    public static final String BOTON_SELECCIONAR = "boton seleccionar producto";
    /**
     * Creates new form AgregarUbicacion
     */
    public AgregarUbicacion() {
        initComponents();
    }

    public void setControlador(ControladorCrearPedido control){
    
        botonAgregarUbicacion.setActionCommand(BOTON_AGREGAR_UBICACION);
        botonAgregarUbicacion.addActionListener(control);
        
        botonConfirmarUbicacion.setActionCommand(BOTON_CONFIRMAR);
        botonConfirmarUbicacion.addActionListener(control);
        
        botonUsarHorneadas.setActionCommand(BOTON_UTULIZAR_HORNEADAS);
        botonUsarHorneadas.addActionListener(control);
        
        botonSeleccionarProducto.setActionCommand(BOTON_SELECCIONAR);
        botonSeleccionarProducto.addActionListener(control);
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tablaUbicaciones = new javax.swing.JTable();
        desplegableBandejas = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        despregableFreezers = new javax.swing.JComboBox<>();
        botonAgregarUbicacion = new javax.swing.JButton();
        botonConfirmarUbicacion = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        botonUsarHorneadas = new javax.swing.JButton();
        botonSeleccionarProducto = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("De donde obtendra las empanadas a cocinar");

        tablaUbicaciones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Producto", "Cantidad", "Volumen", "Freezer", "Bandeja", "seleccionado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablaUbicaciones);

        desplegableBandejas.setToolTipText("");
        desplegableBandejas.setEnabled(false);

        jLabel1.setText("Freezer");

        jLabel2.setText("Bandeja");

        despregableFreezers.setToolTipText("");
        despregableFreezers.setEnabled(false);

        botonAgregarUbicacion.setText("Agregar Ubicaci√≥n");
        botonAgregarUbicacion.setEnabled(false);

        botonConfirmarUbicacion.setText("Confirmar");

        jButton3.setText("Cancelar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        botonUsarHorneadas.setText("Utilizar ya horneadas");
        botonUsarHorneadas.setEnabled(false);

        botonSeleccionarProducto.setText("Seleccionar Producto");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(botonUsarHorneadas)
                                .addGap(27, 27, 27)
                                .addComponent(botonAgregarUbicacion))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(botonSeleccionarProducto)
                                .addGap(76, 76, 76)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jButton3)
                                .addGap(18, 18, 18)
                                .addComponent(botonConfirmarUbicacion))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(23, 23, 23)
                                .addComponent(despregableFreezers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(desplegableBandejas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(desplegableBandejas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(despregableFreezers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonSeleccionarProducto))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(botonConfirmarUbicacion)
                            .addComponent(jButton3))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(botonAgregarUbicacion)
                            .addComponent(botonUsarHorneadas))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
            this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonAgregarUbicacion;
    private javax.swing.JButton botonConfirmarUbicacion;
    private javax.swing.JButton botonSeleccionarProducto;
    private javax.swing.JButton botonUsarHorneadas;
    private javax.swing.JComboBox<String> desplegableBandejas;
    private javax.swing.JComboBox<String> despregableFreezers;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaUbicaciones;
    // End of variables declaration//GEN-END:variables

    public void ejecutar() {
        
        this.setVisible(true);
        this.incializarTabla();
    }

    private void incializarTabla() {
        this.tabla = new DefaultTableModel();
        tabla.addColumn("Producto");
        tabla.addColumn("Cantidad");
        tabla.addColumn("Volumen");
        tabla.addColumn("Freezer");
        tabla.addColumn("Bandeja");
        
        tablaUbicaciones.setModel(tabla);
    }
    
    public void agregarFila(String[] fila){
        this.tabla.addRow(fila);
    }
    
    public void activarBotones(){
        botonAgregarUbicacion.setEnabled(true);
        botonUsarHorneadas.setEnabled(true);
    }
    
    public void desactivarBotones(){
        botonAgregarUbicacion.setEnabled(false);
        botonUsarHorneadas.setEnabled(false);
    }
    public void desactivarBandejas(){
        desplegableBandejas.setEnabled(false);
    }
    public void activarBandejas(){
        desplegableBandejas.setEnabled(true);
    }
    public void desactivarFreezers(){
        despregableFreezers.setEnabled(false);
    }
    public void activarFreezers(){
        despregableFreezers.setEnabled(true);
    }
    
    public String obtenerNombreProductoTabla(int fila){
        return tabla.getValueAt(fila, 0).toString();
    }
    
    public String obtenerNombreFreezerTabla(int fila){
        if(tabla.getValueAt(fila, 3) == null){
            return null;
        }
        return tabla.getValueAt(fila, 3).toString();
    }
    
    public String obtenerNombreBandejaTabla(int fila){
        if(tabla.getValueAt(fila, 4) == null){
            return null;
        }
        return tabla.getValueAt(fila, 4).toString();
    }
    
    public void cargarNombreBandejaTabla(int fila, String numero){
        tabla.setValueAt(numero, fila, 4);
    }
    
    public void cargarNombreFreezerTabla(int fila, String numero){
        tabla.setValueAt(numero, fila, 3);
    }
    
    public int obtenerFilaSeleccionada(){
        return tablaUbicaciones.getSelectedRow();
    }
    
    public void agregarBandejas (ArrayList<Bandeja> bandejas){
        for (Bandeja bandeja : bandejas) {
            desplegableBandejas.addItem(bandeja.getNumero()+"");
        }
    }

    public void agregarFreezers(ArrayList<Freezer> freezers) {
        for (Freezer freezer : freezers) {
            despregableFreezers.addItem(freezer.getNumero()+"");
        }
    }

    public String obtenerDesplegableFreezer() {
        if(despregableFreezers.getSelectedItem() == null){
            return null;
        }
        return despregableFreezers.getSelectedItem().toString();
        
    }
    
    public String obtenerDesplegableBandeja() {
        if(desplegableBandejas.getSelectedItem() == null){
            return null;
        }
        return desplegableBandejas.getSelectedItem().toString();
        
        
    }
    
    public void limpiarDesplegables(){
        desplegableBandejas.removeAllItems();
        despregableFreezers.removeAllItems();
    }
    
    public boolean verificarQueLosCamposEstanCompletos(){
        for (int i = 0; i < tablaUbicaciones.getRowCount(); i++) {
            if(this.obtenerNombreBandejaTabla(i) == null && this.obtenerNombreFreezerTabla(i) == null){
                    return false;
            }
        }
        
        return true;
    }
    
    public String obtenerVolumenTabla(int fila){
        if(tabla.getValueAt(fila, 2) == null){
            return null;
        }
        return tabla.getValueAt(fila, 2).toString();
    }
    
    
}
